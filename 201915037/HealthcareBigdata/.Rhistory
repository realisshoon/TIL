lines(month,
cold2,
type="b",
col="blue")
plot(month,
cold,
main="감기 환자 통계",
type="b",
lty=1,
lwd=1,
xlab="month",˜
getwd()
setwd("/Users/iamseungman/HealthcareBigdata"/PJT)
setwd("/Users/iamseungman/HealthcareBigdata/PJT")
library(readxl)
read_excel("delivery.xlsx")
read_excel("delivery.xlsx")
data1 <- read_excel("delivery.xlsx")
View(data1)
View(data1)
data2 <- read_excel("obesityRate.xlsx")
View(data2)
data1 <- read_excel("delivery.xlsx")
data2 <- read_excel("obesityRate.xlsx")
mydata1 <- as.data.frame(read_excel(("delivery.xlsx")))
mydata1 <- as.data.frame(data1)
mydata2 <- as.data.frame(data2)
print(mydata1)
View(mydata1)
View(mydata1)
data1 <- read_excel("delivery.xlsx")
mydata1 <- as.data.frame(data1)
addmargins(mydata1,margin=2)
apply(mydata1,margin=2)
View(mydata1)
sumMydata1 <- data.frame(2019,2021,2022)
library(dplyr)
mydata1[,3:8]
mydata1[9,3:8]
avgDelivery <- mydata1[9,3:8]
View(avgDelivery)
View(avgDelivery)
avgObesity <- mydata2[2,3:5]
View(avgObesity)
View(avgObesity)
bar(avgObesity)
barplot(avgObesity)
cbind(abgDelivery,avgDelivery$`2019`+avgDelivery$...4)
cbind(abgDelivery,avgDelivery$2019+avgDelivery$...4)
2019 <- cbind(abgDelivery,avgDelivery$2019+avgDelivery$...4)
sum2019 <- cbind(abgDelivery,avgDelivery$2019+avgDelivery$...4)
sum2019 <- cbind(abgDelivery,avgDelivery$'2019'+avgDelivery$...4)
sum2019 <- cbind(mydata1,mydata1$'2019'+mydata1$...4)
sum2019 <- cbind(mydata1,mydata1$'2019'+mydata1$'...4')
sum2019 <- cbind(avgDelivery,avgDelivery$'2019'+avgDelivery$'...4')
data1 <- read_excel("deliverySum.xlsx")
mydata1 <- as.data.frame(data1)
data1 <- read_excel("deliverySum.xlsx")
data2 <- read_excel("obesityRate.xlsx")
mydata1 <- as.data.frame(data1)
mydata2 <- as.data.frame(data2)
View(mydata1)
avgDelivery <- mydata1[9,9:11]
avgObesity <- mydata2[2,3:5]
View(avgDelivery)
View(avgObesity)
colnames(avgDelivery) <- c("delivery")
colnames(avgObesity) <- c("Obesity")
print(avgDelivery)
data1 <- read_excel("deliverySum.xlsx")
data2 <- read_excel("obesityRate.xlsx")
mydata1 <- as.data.frame(data1)
mydata2 <- as.data.frame(data2)
avgDelivery <- mydata1[9,9:11]
rownames(avgDelivery) <- c("delivery")
avgObesity <- mydata2[2,3:5]
rownames(avgObesity) <- c("Obesity")
print(avgDelivery)
colnames(avgDelivery) <- c("2019","2020","2021")
print(avgDelivery)
colnames(avgObesity) <- c("2019","2020","2021")
year1 <- rownames(avgObesity)
year1 <- colnames(avgObesity)
year <-c("2019","2020","2021")
colnames(avgObesity) <- year
c("2019","2020","2021")
colnames(avgDelivery) <-year
print(avgDelivery)
colnames(avgObesity) <- year
avgObesity <- mydata2[2,3:5]
print(avgObesity)
colnames(avgObesity) <- year
print(avgObesity)
rownames(avgObesity) <- c("Obesity")
colnames(avgObesity) <- year
print(avgObesity)
print(avgDelivery)
plot(year,
avgObesity,
main="비만/배달 통계",
type="b",
lty=1,
lwd=1,
xlab="year",
)
lines(year,
avgDelivery,
type="b",
col="blue"
)
plot(month,
cold,
main="감기 환자 통계",
type="b",
lty=1,
lwd=1,
xlab="month",
ylab="cold patients",
ylim = c(1,15)
)
plot(year,
avgObesity,
main="비만/배달 통계",
type="b",
lty=1,
lwd=1,
xlab="year",
)
lines(year,
avgDelivery,
type="b",
col="blue"
)
plot(year,
avgObesity,
main="비만/배달 통계",
type="b",
xlab="year"
)
lines(year,
avgDelivery,
type="b",
col="blue"
)
lines(year,
avgDelivery,
type="b",
col="blue"
)
lines(year,
avgObesity,
type="b",
col="blue"
)
plot(year,
avgDelivery,
main="비만/배달 통계",
type="b",
xlab="year"
)
lines(year,
avgObesity,
type="b",
col="blue"
)
plot(year,
avgDelivery,
main="비만/배달 통계",
type="b",
xlab="year",
ylim(c(23439,1175063))
)
plot(year,
avgDelivery,
main="비만/배달 통계",
type="b",
xlab="year",
ylim=(c(23439,1175063))
)
plot(year,
avgDelivery,
main="비만/배달 통계",
type="b",
xlab="year",
ylim=(c(23439,1500481))
)
lines(year,
avgObesity,
type="b",
col="blue"
)
plot(year,
avgObesity,
main="비만 통계",
type="b",
xlab="year",
ylab="Obesity"
)
plot(year,
avgDelivery,
main="배달 통계",
type="b",
xlab="year",
ylab="delivery"
)
View(data1)
plot(year,
avgObesity,
main="비만 통계",
type="b",
xlab="year",
ylab="Obesity"
)
plot(year,
avgDelivery,
main="배달 통계",
type="b",
xlab="year",
ylab="delivery"
)
#상관계수 r=X와 Y가 함께 변하는 정도/각각 변하는 정도
#plot()
beers <- c(5,2,9,8,3,7,3,5,3,5)
bal <- c(0.1,0.03,0.19,0.12,0.04,0.095,0.07,0.06,0.02,0.05)
ca <- data.frame(beers,bal)
View(ca)
print(ca)
plot(bal~beers,data=ca)
#lm() : linear model
camodel <- lm(bal~beers,data=ca)
abline(camodel) #회귀선 그리기
View(camodel)
View(camodel)
#cor() 상관계수 구하는 함수
#methond : person,kendall,spearman 기본값 : person
cor(beers,bal) #높을 수록 상관관계가 높다
##선그래프
month <- 1:12
cold1 <- c(5,8,7,9,4,6,12,13,8,6,6,4)
cold2 <- c(4,6,5,8,7,8,10,11,6,5,7,3)
plot(month,
cold,
main="감기 환자 통계",
type="b",
lty=1,
lwd=1,
xlab="month",
ylab="cold patients",
ylim = c(1,15)
)
plot(month,
cold1,
main="감기 환자 통계",
type="b",
lty=1,
lwd=1,
xlab="month",
ylab="cold patients",
ylim = c(1,15)
)
lines(month,
cold2,
type="b",
col="blue")
library(extrafont)
##선그래프
par(family = 'NanumGothic')
plot(month,
cold1,
main="감기 환자 통계",
type="b",
lty=1,
lwd=1,
xlab="month",
ylab="cold patients",
ylim = c(1,15)
)
plot(month,
cold1,
main="감기 환자 통계",
type="l",
lty=1,
lwd=1,
xlab="month",
ylab="cold patients",
ylim = c(1,15)
)
lines(month,
cold2,
type="b",
col="blue")
plot(month,
cold1,
main="감기 환자 통계",
type="s",
lty=1,
lwd=1,
xlab="month",
ylab="cold patients",
ylim = c(1,15)
)
lines(month,
cold2,
type="b",
col="blue")
##week10 연습문제1
print(mtcars)
##week10 연습문제1
print(cars)
plot(cars$speed,cars$dist)
print(pressure)
plot(pressure$temperature,pressure$pressure)
print(state.x77)
pairs(state.x77[,c("Population","Income","Illiteracy","Area")])
pairs(state.x77[c("Population","Income","Illiteracy","Area")])
pairs(state.x77[,c("Population","Income","Illiteracy","Area")])
plot(cars$speed,cars$dist)
plot(pressure$temperature,pressure$pressure)
pairs(state.x77[,c("Population","Income","Illiteracy","Area")])
##연습문제2
print(trees)
plot(trees$Girth,trees$Height)
pairs(trees[,c("Girth","Height","Volume")])
cor(trees$Girth,trees$Height)
pairs(trees)
cor(trees)
##연습문제3
print(Orange)
color <- c("red","green","blue","yellow","black")
plot(Orange$age,Orange$circumference,col=color[Orange$Tree])
##연습문제4
library(mlbench)
##연습문제4
install.packages(mlbench)
##연습문제4
install.packages("mlbench")
##연습문제4
install.packages("mlbench")
##연습문제4
install.packages("mlbench")
library(mlbench)
data("Glass")
print(Glass)
myds <- Glass
pairs(myds[,-10])
cor(myds[,-10])
pairs(myds,col=myds[,10])
pairs(myds,col=myds$Type)
pairs(myds[,-10],col=myds$Type)
##연습문제5
data("Ionosphere")
print(Ionosphere)
cor(Ionosphere)
myds <- Ionosphere[,3:12]
myds
cor(myds)
mycor <- data.frame(cor(myds))
for(i in 1:nrow(mycor)){
mycor[i,i] <- NA
}
mycor
max(mycor,na.rm = T)
plot(myds$V9,myds$V11)
cor(myds$V9,myds$V11)
###week11
##단순회귀분석
data(mtcars)
plot(mpg~wt,data=mtcars)
model <- lm(mpg~wt,mtcars)
abline(model)
coef(model)[1]
coef(model)[2]
coef(model)
wtSample <- 3.8
equation <- w*wtSample+b
print(equation)
b <- coef(model)[1] #b 값
w <- coef(model)[2] #w 값
equation <- w*wtSample+b
print(equation)
wtData <- mtcars[,"wt"]
mtcars
wtData <- mtcars[,"wt"]
wtData <- mtcars[,"wt"]
mpgPred <- w*wtData+b
compare <- data.frame(mpgPred,mpgData,mpgPred-mpgData)
mpgData <- mtcars[,"mpg"]
compare <- data.frame(mpgPred,mpgData,mpgPred-mpgData)
colnames(compare) <- c("예상","실제","오차")
head(compare)
##다중회귀분석
#독립변수 간에는 서로 낮은 상관관계를 보여야함
#실습
data(mtcars)
df <- data.frame(mtcars$wt,mtcars$disp,mtcars$hp)
colnames(df) <- c("중량","배기량","마력")
df
plot(df,pch=16,col="blue",main="산점도 매트릭스")
plot(df,pch=13,col="blue",main="산점도 매트릭스")
plot(df,pch=16,col="blue",main="산점도 매트릭스")
model <- lm(mpg~wt+disp+hp,data=mtcars)
summary(model)
library(MASS)
newModel <- stepAIC(model)
summary(newModel)
pageNo <- 1
rows <- 10
type_data_format <- "xml"
url <- paste0(serviceURL,operation,paste0)
url <- paste0(serviceURL, operation, paste0("?serviceKey=", ServiceKey), paste0("&pageN0=", pageNo), paste0("&numOfRows=", rows), paste0("&resultType=", type_data_format))
##연습문제
data(trees)
trees
df <- data.frame(trees$Girth,trees$Height)
plot(df)
plot(df,pch=20,col="blue")
model <- lm(volume~Girth+Height,data=trees)
##다중회귀분석
#독립변수 간에는 서로 낮은 상관관계를 보여야함
#실습
data(mtcars)
df <- data.frame(mtcars$wt,mtcars$disp,mtcars$hp)
colnames(df) <- c("중량","배기량","마력")
plot(df,pch=16,col="blue",main="산점도 매트릭스")
model <- lm(mpg~wt+disp+hp,data=mtcars)
summary(model)
##연습문제
data(trees)
trees
model <- lm(Volume~Girth+Height,data=trees)
summary(model)
Volume=-57.9877+4.7082*Girth+0.3393*Height
Volume=-57.9877+4.7082*Girth+0.3393*Height
Volume = -57.9877 + 4.7082 * Girth + 0.3393 * Height
##연습문제
data(trees)
trees
df <- data.frame(trees$Girth,trees$Height)
plot(df,pch=20,col="blue")
model <- lm(Volume~Girth+Height,data=trees)
summary(model)
Volume = -57.9877 + 4.7082 * Girth + 0.3393 * Height
Volume <-  -57.9877 + 4.7082 * Girth + 0.3393 * Height
Volume <-  -57.9877 + 4.7082 * Girth + 0.3393 * Height
Girth
model <- lm(Volume~Girth+Height,data=trees)
summary(model)
Volume <-  -57.9877 + 4.7082 * Girth + 0.3393 * Height
Volume =  -57.9877 + 4.7082 * Girth + 0.3393 * Height
View(trees)
Height
Volume =  -57.9877 + 4.7082 * trees$Girth + 0.3393 * trees$Height
Volume
##
library(lbench)
##
install.packages("lbench")
library(lbench)
library(lbench)
data("BostonHousing")
BostonHousing
ds <- data.frame(BostonHousing[,-4])
model <- lm(medv~.,data=ds)
summary(model)
plot(ds,pch=20,col="blue")
###
data(mtcars)
mtcars
df <- data.frame(mtcars[,-1])
df
lm(mpg~.,data=df)
mtcars
lm(mpg~.,data=mtcars)
lm(mpg~.,data=mtcars)
mod <- lm(mpg~.,data=mtcars)
summary(mod)
mtcars
data(mtcars)
mtcars
mod <- lm(mpg~.,data=mtcars)
summary(mod)
library(MASS)
mod2 <- stepAIC(mod)
summary(mod2)
###
install.packages("csv")
library(csv)
CSV <- "https://stats.idre.ucla.edu/stat/data/binary.csv"
###
excel <- read.csv("binary.csv")
excel
mydata <- data.frame(excel)
mydata
mod <- lm(admit~.,mydata)
summary(mod)
mod <- glm(admit~.,mydata)
mod <- lm(admit~.,mydata)
mod2 <- glm(admit~gre+gpa+rank,data=mydata)
summary(mod)
summary(mod2)
pred <- predict(mod2,mydata[,c"gre","gpa","rank"])
pred <- predict(mod2,mydata[,c("gre","gpa","rank")])
pred <- round(pred,digits = 0)
pred
pred <- predict(mod2,mydata[,c("gre","gpa","rank")])
pred
pred <- round(pred,digits = 0)
pred <- round(pred,digits = 0)
pred
result <- data.frame(pred,mydata$admit)
result <- data.frame(pred,mydata$admit)
print(result)
